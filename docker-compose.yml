services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: captains-log-app
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://postgres:postgres@db:5432/captains_log
      - SESSION_SECRET=change_this_to_a_secure_secret
      - JWT_SECRET=change_this_to_a_secure_jwt_secret
      - STORAGE_PATH=/usr/src/app/uploads
    volumes:
      - ./uploads:/usr/src/app/uploads
      - ./logs:/usr/src/app/logs
    depends_on:
      - db
    networks:
      - captains-log-network

  db:
    image: postgres:14-alpine
    container_name: captains-log-db
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=captains_log
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - captains-log-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: captains-log-pgadmin
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@captainslog.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - captains-log-network

volumes:
  postgres-data:
    driver: local

networks:
  captains-log-network:
    driver: bridge